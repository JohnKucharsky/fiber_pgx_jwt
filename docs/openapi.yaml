openapi: 3.0.3
info:
  title: DVD Rental API
  description: DVD Rental dataset API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
tags:
  - name: Actor
  - name: Country
  - name: City
  - name: Address
paths:
  /actor:
    post:
      tags:
        - Actor
      summary: Create an actor
      operationId: ActorPost
      requestBody:
        $ref: '#/components/requestBodies/ActorInput'
      responses:
        '201':
          $ref: '#/components/responses/OneActor'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
    get:
      tags:
        - Actor
      summary: Get all actors
      operationId: GetManyActors
      responses:
        '200':
          $ref: '#/components/responses/ManyActors'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /actor/{id}:
    get:
      tags:
        - Actor
      description: Get actor by id
      operationId: GetOneActor
      responses:
        '200':
          $ref: '#/components/responses/OneActor'
    put:
      tags:
        - Actor
      description: Update actor
      operationId: UpdateActor
      requestBody:
        $ref: '#/components/requestBodies/ActorInput'
      responses:
        '201':
          $ref: '#/components/responses/OneActor'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
    delete:
      tags:
        - Actor
      description: Delete an actor
      operationId: DeleteActor
      responses:
        '201':
          $ref: '#/components/responses/OneActor'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /country:
    post:
      tags:
        - Country
      summary: Create a country
      operationId: CountryPost
      requestBody:
        $ref: '#/components/requestBodies/CountryInput'
      responses:
        '201':
          $ref: '#/components/responses/OneCountry'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
    get:
      tags:
        - Country
      summary: Get all countries
      operationId: GetManyCountries
      responses:
        '200':
          $ref: '#/components/responses/ManyCountries'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /country/{id}:
    get:
      tags:
        - Country
      description: Get country by id
      operationId: GetOneCountry
      responses:
        '200':
          $ref: '#/components/responses/OneCountry'
    put:
      tags:
        - Country
      description: Update country
      operationId: UpdateCountry
      requestBody:
        $ref: '#/components/requestBodies/CountryInput'
      responses:
        '201':
          $ref: '#/components/responses/OneCountry'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
    delete:
      tags:
        - Country
      description: Delete a country
      operationId: DeleteCountry
      responses:
        '201':
          $ref: '#/components/responses/OneCountry'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /city:
    post:
      tags:
        - City
      summary: Create a city
      operationId: CityPost
      requestBody:
        $ref: '#/components/requestBodies/CityInput'
      responses:
        '201':
          $ref: '#/components/responses/OneCity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
    get:
      tags:
        - City
      summary: Get all cities
      operationId: GetManyCities
      responses:
        '200':
          $ref: '#/components/responses/ManyCities'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /city/{id}:
    get:
      tags:
        - City
      description: Get city by id
      operationId: GetOneCity
      responses:
        '200':
          $ref: '#/components/responses/OneCity'
    put:
      tags:
        - City
      description: Update city
      operationId: UpdateCity
      requestBody:
        $ref: '#/components/requestBodies/CityInput'
      responses:
        '201':
          $ref: '#/components/responses/OneCity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
    delete:
      tags:
        - City
      description: Delete a city
      operationId: DeleteCity
      responses:
        '201':
          $ref: '#/components/responses/OneCity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /address:
    post:
      tags:
        - Address
      summary: Create an address
      operationId: AddressPost
      requestBody:
        $ref: '#/components/requestBodies/AddressInput'
      responses:
        '201':
          $ref: '#/components/responses/OneAddress'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
    get:
      tags:
        - Address
      summary: Get all address
      operationId: GetManyAddress
      responses:
        '200':
          $ref: '#/components/responses/ManyAddresses'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /address/{id}:
    get:
      tags:
        - Address
      description: Get address by id
      operationId: GetOneAddress
      responses:
        '200':
          $ref: '#/components/responses/OneAddress'
    put:
      tags:
        - Address
      description: Update address
      operationId: UpdateAddress
      requestBody:
        $ref: '#/components/requestBodies/AddressInput'
      responses:
        '201':
          $ref: '#/components/responses/OneAddress'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
    delete:
      tags:
        - Address
      description: Delete an address
      operationId: DeleteAddress
      responses:
        '201':
          $ref: '#/components/responses/OneAddress'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /auth/sign-up:
    post:
      tags:
        - Authorization
      summary: Register
      operationId: SignUp
      requestBody:
        $ref: '#/components/requestBodies/SignUpInput'
      responses:
        '201':
          $ref: '#/components/responses/User'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
  /auth/login:
    post:
      tags:
        - Authorization
      summary: Login
      description: Sign in to the app. Returns cookies, access_token, refresh_token, logged_in
      operationId: SignIn
      requestBody:
        $ref: '#/components/requestBodies/SignInInput'
      responses:
        '201':
          $ref: '#/components/responses/LoginRes'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
  /auth/logout:
    get:
      tags:
        - Authorization
      summary: Logout
      description: Destroys all cookies, finishes local session, saved on the server
      operationId: Logout
      responses:
        '201':
          $ref: '#/components/responses/EmptyOkResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /auth/refresh:
    get:
      tags:
        - Authorization
      summary: Refresh token
      description: Sets new access_token and logged_in(HTTPOnly:false). refresh_token stays the same until expires
      operationId: RefreshToken
      responses:
        '201':
          $ref: '#/components/responses/AccessToken'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /auth/me:
    get:
      tags:
        - Authorization
      security:
        - access_token: []
      summary: Get me
      description: Get info about currently authorized user
      operationId: GetMe
      responses:
        '201':
          $ref: '#/components/responses/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
components:
  securitySchemes:
    access_token:
      description: |
        You have to have access token in access_token cookie
      type: apiKey
      name: access_token
      in: cookie
  responses:
    ManyActors:
      description: Actors array
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Actor'
    Unauthorized:
      description: Unauthorized
      content: {}
    OneActor:
      description: One Actor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Actor'
    GenericError:
      description: Unexpected error
      content: {}
    ManyCountries:
      description: Many countries
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Country'
    OneCountry:
      description: One country
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Country'
    ManyCities:
      description: Many cities
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/City'
    OneCity:
      description: One city
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/City'
    ManyAddresses:
      description: Many addresses
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Address'
    AccessToken:
      description: Access token
      content:
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
    OneAddress:
      description: One address
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
    User:
      description: User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    LoginRes:
      description: User and access token
      content:
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
              user:
                $ref: '#/components/schemas/User'
    EmptyOkResponse:
      description: No content
      content:
        text/html:
          schema:
            type: string
  requestBodies:
    ActorInput:
      required: true
      description: Create and update actor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActorInput'
    CountryInput:
      required: true
      description: Create and update country
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CountryInput'
    CityInput:
      required: true
      description: Create and update city
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CityInput'
    AddressInput:
      required: true
      description: Create and update address
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddressInput'
    SignUpInput:
      required: true
      description: Register a user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignUpInput'
    SignInInput:
      required: true
      description: Login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignInInput'
  schemas:
    Actor:
      required:
        - id
        - first_name
        - last_name
        - updated_at
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        updated_at:
          type: string
          format: date-time
    ActorInput:
      required:
        - first_name
        - last_name
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
          format: date-time
    Country:
      required:
        - id
        - country
        - updated_at
      type: object
      properties:
        id:
          type: integer
        country:
          type: string
        updated_at:
          type: string
          format: date-time
    CountryInput:
      required:
        - country
      type: object
      properties:
        country:
          type: string
    City:
      required:
        - id
        - city
        - country
        - updated_at
      type: object
      properties:
        id:
          type: integer
        city:
          type: string
        country:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
    CityInput:
      required:
        - city
        - country_id
      type: object
      properties:
        city:
          type: string
        country_id:
          type: string
    Address:
      required:
        - id
        - address
        - address2
        - district
        - city
        - country
        - postal_code
        - phone
        - updated_at
      type: object
      properties:
        id:
          type: integer
        address:
          type: string
        address2:
          type: string
          nullable: true
        district:
          type: string
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        phone:
          type: string
        updated_at:
          type: string
          format: date-time
    AddressInput:
      required:
        - address
        - district
        - phone
      type: object
      properties:
        address:
          type: string
        address2:
          type: string
          nullable: true
        district:
          type: string
        city_id:
          type: integer
          nullable: true
        postal_code:
          type: integer
          nullable: true
        phone:
          type: string
    SignUpInput:
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
          minLength: '8'
    User:
      required:
        - id
        - name
        - email
        - updated_at
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        updated_at:
          type: string
          format: date-time
    SignInInput:
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          minLength: '8'